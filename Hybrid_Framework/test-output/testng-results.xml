<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="SuiteA" duration-ms="40537" started-at="2021-01-14T21:49:26 IST" finished-at="2021-01-14T21:50:07 IST">
    <groups>
    </groups>
    <test name="LoginTest" duration-ms="18555" started-at="2021-01-14T21:49:26 IST" finished-at="2021-01-14T21:49:45 IST">
      <class name="com.qtpselenium.hybrid.SuiteA.LoginTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.qtpselenium.hybrid.SuiteA.LoginTest@5faeada1]" name="beforeTest" is-config="true" duration-ms="465" started-at="2021-01-14T21:49:26 IST" finished-at="2021-01-14T21:49:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.qtpselenium.hybrid.SuiteA.LoginTest@5faeada1]" name="beforeMethod" is-config="true" duration-ms="199" started-at="2021-01-14T21:49:27 IST" finished-at="2021-01-14T21:49:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="loginTest(java.util.Hashtable)[pri:0, instance:com.qtpselenium.hybrid.SuiteA.LoginTest@5faeada1]" name="loginTest" duration-ms="10390" started-at="2021-01-14T21:49:27 IST" data-provider="getData" finished-at="2021-01-14T21:49:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ExpectedResult=Success, RunMode=Y, Password=p12, AccountName=Ashish Thakur, UserName=u12, Browser=Chrome}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.reflect.InvocationTargetException">
            <full-stacktrace>
              <![CDATA[java.lang.reflect.InvocationTargetException
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at com.qtpselenium.hybrid.driver.DriverScript.executeTest(DriverScript.java:32)
at com.qtpselenium.hybrid.SuiteA.LoginTest.loginTest(LoginTest.java:22)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.AssertionError: Expected Success but encountered Failure
at org.junit.Assert.fail(Assert.java:88)
at com.qtpselenium.hybrid.keywords.GenericKeywords.reportFailure(GenericKeywords.java:135)
at com.qtpselenium.hybrid.keywords.AppKeywords.validateLogin(AppKeywords.java:11)
... 34 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.reflect.InvocationTargetException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qtpselenium.hybrid.SuiteA.LoginTest@5faeada1]" name="afterMethod" is-config="true" duration-ms="458" started-at="2021-01-14T21:49:37 IST" finished-at="2021-01-14T21:49:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="loginTest(java.util.Hashtable)[pri:0, instance:com.qtpselenium.hybrid.SuiteA.LoginTest@5faeada1]" name="loginTest" duration-ms="6098" started-at="2021-01-14T21:49:38 IST" data-provider="getData" finished-at="2021-01-14T21:49:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ExpectedResult=Fail, RunMode=Y, Password=p23, AccountName=Abhishek Puri, UserName=u23, Browser=Firefox}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.qtpselenium.hybrid.SuiteA.LoginTest@5faeada1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-01-14T21:49:38 IST" finished-at="2021-01-14T21:49:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qtpselenium.hybrid.SuiteA.LoginTest@5faeada1]" name="afterMethod" is-config="true" duration-ms="898" started-at="2021-01-14T21:49:44 IST" finished-at="2021-01-14T21:49:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.qtpselenium.hybrid.SuiteA.LoginTest -->
    </test> <!-- LoginTest -->
    <test name="CreatePortfolioTest" duration-ms="21966" started-at="2021-01-14T21:49:45 IST" finished-at="2021-01-14T21:50:07 IST">
      <class name="com.qtpselenium.hybrid.SuiteA.CreatePortfolioTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.qtpselenium.hybrid.SuiteA.CreatePortfolioTest@32d2fa64]" name="beforeTest" is-config="true" duration-ms="37" started-at="2021-01-14T21:49:45 IST" finished-at="2021-01-14T21:49:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="createPortfolioTest(java.util.Hashtable)[pri:0, instance:com.qtpselenium.hybrid.SuiteA.CreatePortfolioTest@32d2fa64]" name="createPortfolioTest" duration-ms="9139" started-at="2021-01-14T21:49:45 IST" data-provider="getData" finished-at="2021-01-14T21:49:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{RunMode=Y, Password=p12, UserName=u12, Browser=Chrome}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPortfolioTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.qtpselenium.hybrid.SuiteA.CreatePortfolioTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-01-14T21:49:45 IST" finished-at="2021-01-14T21:49:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qtpselenium.hybrid.SuiteA.CreatePortfolioTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="137" started-at="2021-01-14T21:49:54 IST" finished-at="2021-01-14T21:49:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.qtpselenium.hybrid.SuiteA.CreatePortfolioTest@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-01-14T21:49:54 IST" finished-at="2021-01-14T21:49:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="createPortfolioTest(java.util.Hashtable)[pri:0, instance:com.qtpselenium.hybrid.SuiteA.CreatePortfolioTest@32d2fa64]" name="createPortfolioTest" duration-ms="11558" started-at="2021-01-14T21:49:54 IST" data-provider="getData" finished-at="2021-01-14T21:50:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{RunMode=Y, Password=p23, UserName=u23, Browser=Firefox}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPortfolioTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qtpselenium.hybrid.SuiteA.CreatePortfolioTest@32d2fa64]" name="afterMethod" is-config="true" duration-ms="1089" started-at="2021-01-14T21:50:06 IST" finished-at="2021-01-14T21:50:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.qtpselenium.hybrid.SuiteA.CreatePortfolioTest -->
    </test> <!-- CreatePortfolioTest -->
  </suite> <!-- SuiteA -->
</testng-results>
